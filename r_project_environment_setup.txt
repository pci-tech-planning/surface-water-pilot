# ✅ R Project Environment Setup Guide

This guide outlines the standard steps for initializing a clean, reproducible R environment using `renv` in any new project.

---

## 📁 1. Create a New R Project

- In RStudio, go to: `File > New Project > New Directory`
- Select an appropriate folder name (e.g., `surface-water-pilot`)
- Save it inside your working directory or GitHub repo folder

---

## 🧱 2. Initialize renv for Dependency Management

In the R console, run:
```r
renv::init()
```

This creates:
- A private library for your project
- A `renv.lock` file to track package versions
- A `renv/` folder for environment settings

---

## 📦 3. Install Required Packages

Use `install.packages()` or `librarian::shelf()` to install packages:
```r
install.packages("tidyverse")
```
or
```r
librarian::shelf(tidyverse, lubridate, here)
```

Packages will be installed into the project-specific library.

---

## 🔒 4. Snapshot the Environment

Once your packages are installed, run:
```r
renv::snapshot()
```

This updates the `renv.lock` file to reflect your environment.

---

## 🧪 5. Check Reproducibility

To simulate restoring on a new machine:
1. Clone or open the R project
2. Run:
   ```r
   renv::restore()
   ```
This re-installs all packages listed in `renv.lock`.

---

## 🌐 6. Connect to GitHub (Optional)

- Create a GitHub repo and push your project files.
- Make sure to `.gitignore` these:
  ```
  renv/library/
  .Rhistory
  .Rproj.user/
  ```

---

## 📝 7. Optional: Quarto Support

If using Quarto documents:
```r
quarto::render("report.qmd")
```

Add Quarto to your project as needed using:
```r
quarto::quarto_add()
```

---

## 🚨 Tips

- Always run `renv::snapshot()` after adding or updating packages.
- Commit `renv.lock` to Git—never `renv/library/`.
- Use `here::here()` for portable file paths across systems.
